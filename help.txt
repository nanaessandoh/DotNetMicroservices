- Build platform service image
docker build -f PlatformService.Api/Dockerfile -t nanaessandoh/platformservice .

- Push platform service image to docker hub
docker push nanaessandoh/platformservice

- Spin image in container dev environment
docker run -p 8080:80 -d nanaessandoh/platformservice    (-d is optional)

- Build command service image
docker build -f CommandService.Api/Dockerfile -t nanaessandoh/commandservice .

- Push command service image to docker hub
docker push nanaessandoh/commandservice

- Spin image in container dev environment
docker run -p 8080:80 -d nanaessandoh/commandservice    (-d is optional)

- See running containers
docker ps

- Start container
docker start <container-id form docker ps>

- stop container
docker stop <container-id from docker ps>

- Deploying Postgresql server in kubernetes
 - Download pg-admin
 - Run kubectl get services (take note of external ip for the loadbalancer of postgresql server and port
 - In pg-admin hostname is external ip (localhost in my case, user: postgres, password: password set in deployment .yaml file (myPassword in my instance)
 - Safe way is to store password in kubernetes secrets.


- Restart a deployment
 - kubectl get deployments (find the name of the deployment you want to restart)
 - kubectl rollout restart deployment platforms-deploy <-- plaform-deploy is my deployment name
 - kubectl get pods <-- check to see if container was created successfully
